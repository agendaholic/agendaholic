/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ViewsViewIdImport } from './routes/views/$viewId'

// Create Virtual Routes

const SettingsLazyImport = createFileRoute('/settings')()
const DashboardLazyImport = createFileRoute('/dashboard')()

// Create/Update Routes

const SettingsLazyRoute = SettingsLazyImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/settings.lazy').then((d) => d.Route))

const DashboardLazyRoute = DashboardLazyImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dashboard.lazy').then((d) => d.Route))

const ViewsViewIdRoute = ViewsViewIdImport.update({
  path: '/views/$viewId',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/views/$viewId.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      preLoaderRoute: typeof DashboardLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      preLoaderRoute: typeof SettingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/views/$viewId': {
      preLoaderRoute: typeof ViewsViewIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  DashboardLazyRoute,
  SettingsLazyRoute,
  ViewsViewIdRoute,
])

/* prettier-ignore-end */
